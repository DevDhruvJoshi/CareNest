name: CI

on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ dev, main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Show npm version
        run: npm -v

      - name: Install (workspaces)
        run: npm ci --workspaces --include-workspace-root

      - name: Prisma generate (db)
        run: |
          cd packages/db
          npx prisma generate

      - name: Build packages and apps
        env:
          # Provide minimal env so builds don't fail
          NODE_ENV: production
          DATABASE_URL: postgresql://user:pass@localhost:5432/carenest
          NEXT_PUBLIC_API_URL: http://localhost:4000
          NEXT_PUBLIC_ENTERPRISE_URL: http://localhost:5000
          NEXT_PUBLIC_READ_TOKEN: test-read-token
        run: |
          npm run -ws build

  smoke:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install (workspaces)
        run: npm ci --workspaces --include-workspace-root

      - name: Prisma generate (db)
        run: |
          cd packages/db
          npx prisma generate

      - name: Build API
        run: |
          cd apps/api
          npm run build

      - name: Start API (mock LLM) in background
        env:
          PORT: 4000
          NODE_ENV: test
          JWT_SECRET: test-secret
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/carenest
          INGEST_TOKEN: dev-ingest-token
          READ_TOKEN: dev-read-token
          LLM_MOCK: true
        run: |
          node dist/index.js &
          echo $! > api.pid
          sleep 3

      - name: Smoke test
        env:
          API_URL: http://localhost:4000
          INGEST_TOKEN: dev-ingest-token
          READ_TOKEN: dev-read-token
        run: node scripts/api_smoke.mjs

      - name: Stop API
        if: always()
        run: |
          if [ -f api.pid ]; then kill $(cat api.pid) || true; fi
