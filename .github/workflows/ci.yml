name: CI

on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ dev, main ]

jobs:
  build-api-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install deps (workspace-aware)
        run: npm ci
      - name: Build DB package
        run: npm run -w @carenest/db build
      - name: Build API
        run: npm run -w apps/api build || echo "api build script not defined, skipping"
      - name: TypeCheck API
        run: npx -w apps/api tsc -p apps/api/tsconfig.json --noEmit
      - name: Build Web
        run: npm run -w apps/web build || echo "web build script not defined, skipping"

  build-enterprise:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r apps/enterprise/requirements.txt
      - name: Lint import smoke
        run: |
          python - <<'PY'
          import importlib
          for m in ['fastapi','yaml','requests','cv2','mediapipe','numpy']:
              try:
                  importlib.import_module(m)
                  print('ok', m)
              except Exception as e:
                  print('warn', m, e)
          PY
name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enforce npm@10
        run: |
          npm i -g npm@10
          npm --version

      - name: Show versions
        run: |
          node -v
          npm -v

      - name: Install dependencies (prefer npm ci, fallback to install)
        shell: bash
        run: |
          set -e
          echo "Using npm $(npm -v)"
          if npm ci --workspaces --include-workspace-root --no-audit --no-fund; then
            echo "npm ci succeeded"
          else
            echo "npm ci failed, falling back to npm install"
            npm install --workspaces --include-workspace-root --no-audit --no-fund
          fi

      - name: Prisma generate
        run: npm run -w packages/db prisma:generate

      - name: Build db package
        run: npm run -w packages/db build

      - name: Build API
        run: npm run -w apps/api build

      - name: Build Web
        run: npm run -w apps/web build


